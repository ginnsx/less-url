<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.xioshe.less.url.repository.mapper.UrlMapper">
    <resultMap id="BaseResultMap" type="com.github.xioshe.less.url.entity.Url">
        <!--@Table lu_url-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="short_url" jdbcType="VARCHAR" property="shortUrl"/>
        <result column="original_url" jdbcType="VARCHAR" property="originalUrl"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="expiration_time" jdbcType="TIMESTAMP" property="expirationTime"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        id,
        short_url,
        original_url,
        user_id,
        `status`,
        expiration_time,
        create_time,
        update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from lu_url
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from lu_url
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.github.xioshe.less.url.entity.Url"
            useGeneratedKeys="true">
        insert into lu_url (short_url, original_url, user_id,
                            `status`, expiration_time, create_time, update_time)
        values (#{shortUrl,jdbcType=VARCHAR}, #{originalUrl,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT},
                #{status,jdbcType=TINYINT}, #{expirationTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP},
                #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.github.xioshe.less.url.entity.Url"
            useGeneratedKeys="true">
        insert into lu_url
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="shortUrl != null">
                short_url,
            </if>
            <if test="originalUrl != null">
                original_url,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="status != null">
                `status`,
            </if>
        <if test="expirationTime != null">
            expiration_time,
        </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="shortUrl != null">
                #{shortUrl,jdbcType=VARCHAR},
            </if>
            <if test="originalUrl != null">
                #{originalUrl,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="expirationTime != null">
                expiration_time = #{expirationTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.github.xioshe.less.url.entity.Url">
        update lu_url
        <set>
            <if test="shortUrl != null">
                short_url = #{shortUrl,jdbcType=VARCHAR},
            </if>
            <if test="originalUrl != null">
                original_url = #{originalUrl,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=TINYINT},
            </if>
        <if test="expirationTime != null">
            expiration_time = #{expirationTime,jdbcType=TIMESTAMP},
        </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.github.xioshe.less.url.entity.Url">
        update lu_url
        set short_url    = #{shortUrl,jdbcType=VARCHAR},
            original_url = #{originalUrl,jdbcType=VARCHAR},
            user_id      = #{userId,jdbcType=BIGINT},
            `status`     = #{status,jdbcType=TINYINT},
            expiration_time = #{expirationTime,jdbcType=TIMESTAMP},
            create_time  = #{createTime,jdbcType=TIMESTAMP},
            update_time  = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="existsByShortUrl" resultType="boolean">
        select exists(select 1 from lu_url where short_url = #{shortUrl})
    </select>

    <select id="selectByOriginalUrlAndUserId" resultType="java.lang.String">
        select short_url
        from lu_url
        where original_url = #{originalUrl}
          and user_id = #{userId}
    </select>

    <select id="selectByShortUrl" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from lu_url
        where short_url = #{shortUrl} limit 1
    </select>
</mapper>